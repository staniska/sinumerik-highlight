{
    fileTypes: [
      "mpf",
      "spf",
      "def",
    ]
    scopeName: "source.sinumerik"
    name: "sinumerik"
    patterns: [
      {
        include: "#statements"
      }
    ]
    repository:
      statements:
        patterns: [
          {
            include: "#sinumerik_auto_comment"
          }
          {
            include: "#variables"
          }
          {
            include: "#keywords"
          }
          {
            include: "#sinumerik_axis"
          }
          {
            include: "#sinumerik_mark"
          }
          {
            include: "#sinumerik_M"
          }
          {
            include: "#sinumerik_S"
          }
          {
            include: "#sinumerik_T"
          }
          {
            include: "#sinumerik_feed"
          }
          {
            include: "#g_func"
          }
          {
            include: "#sys_var"
          }
        ]

      sinumerik_auto_comment:
        patterns: [
          {
            "begin": ";This\\scomment\\sis\\sautomatically\\screated\\sby\\ssinumerik\\-highlight\\spackage"
            "beginCaptures":
              "0":
                "name": "comment.sinumerik.auto_begin"
            "end": ";End\\sof\\scomment\\screated\\sby\\ssinumerik\\-highlight\\spackage"
            "endCaptures":
              "0":
                "name": "comment.sinumerik.auto_end"
            "name": "comment.sinumerik.auto"
          }
        ]


      g_func:
        patterns: [
          {
            "match": "(?<=[\\s]|^)G\\d+(?=\\s)"
            "name": "sinumerik_g_func"
          }
          {
            "match": "(?<=[\\s]|^)[MP]?CALL|EXTCALL|SUPA"
            "name": "sinumerik_g_func"
          }
        ]
      sys_var:
        patterns: [
          {
            "match": "\\$AA_IW|\\$AA_IM|\\$P_F|\\$P_TOOL[\\w]*|\\$P_D"
            "name": "sys_var"
          }
          {
            "match": "\\$TC_\\w+\\d+"
            "name": "sys_var"
          }
          {
            "match": "\\$AN_CEC\\w*(?=\\[)"
            "name": "sys_var"
          }

        ]
      keywords:
        patterns: [
          {
            "match": "(?<=(\\W)|(^[XYZWVUABCFP])|(\\W[XYZWVUABCFP]))\\d+\\.?\\d*"
            "name": "constant.numeric"
          }
          {
            "match": "(?<=[\\s]|^)MSG(?=\\()"
            "name": "sinumerik_msg"
          }
          {
            "match": "[\\=\\-\\+\\/\\<\\>]"
            "name": "keyword.operator.sinumerik"
          }
          {
            "match": "(?<=[\\s]|^)((B_)?(AND|OR|NOT|XOR))(?=\\s)"
            "name": "keyword.operator.sinumerik"
          }
          {
            "match": "(\\b((DIV)|(MOD)|(SIN)|(COS)|(TAN)|(ASIN)|(ACOS)|(ATAN2)|(SQRT)|(ABS)|(POT)|(TRUNC)|(ROUND)|(LN)|(EXP)))(?=\\()"
            "name": "sinumerik_math"
          }
          {
            "match": "(?<=[\\s]|^|\\(|\\,)(PROC|DEF|INT|REAL|BOOL|CHAR|STRING|AXIS|FRAME)(?=\\s)"
            "name": "storage.type.sinumerik"
          }
          {
            "match": ";.*"
            "name": "comment.sinumerik"
          }
          {
            "match": "(?<=[\\s]|^)(IF|ELSE|ENDIF|(GOTO[BF]?)|WHILE|ENDWHILE|FOR|TO|ENDFOR|LOOP|ENDLOOP|STOPRE|REPEAT)(?=\\s)|((?<=\\s)P(?=[\\=\\d]))"
            "name": "keyword.control.sinumerik"
          }
          {
            "match": "EXECSTRING"
            "name":  "string.execstring.sinumerik"
          }

          {
            'begin': '"'
            'beginCaptures':
              '0':
                 'name': 'punctuation.definition.string.begin.sinumerik'
            'end': '"'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.sinumerik'
            'name': 'string.quoted.double.sinumerik'
          }
        ]
       sinumerik_feed:
        patterns: [
          {
            "match": "(?<=[\\s]|^)(F|FA|FB)(?=\\=?\\d+)"
            "name": "sinumerik_feed"
          }
          {
            "match": "(?<=[\\s]|^)(CFC|CFTCP|OFFN|KONT[TC])"
            "name": "sinumerik_feed"
          }
        ]
       sinumerik_axis:
        patterns: [
          {
            "match": "(?<=[\\s]|^)[XYZWVUABC](?=\\=?(\\-?(\\d+)|(AC\\()|(IC\\()))"
            "name": "sinumerik_axis"
          }
          {
            "match": "(?<=[\\s]|^)[XYZWVUABC](?=\\=\\-?)"
            "name": "sinumerik_axis"
          }
          {
            "match": "(?<=[\\s]|^)[XYZWVUABC](?=\\=\\w+)"
            "name": "sinumerik_axis"
          }
          {
            "match": "(?<=[\\[])[XYZWVUABC](?=\\])"
            "name": "sinumerik_axis"
          }
          {
            "match": "(?<=[\\s]|^)[IJK](?=\\=?(\\d+|AC|IC))"
            "name": "sinumerik_circle_center"
          }
          {
            "match": "(?<=\\=)AC\\(|IC\\("
            "name": "sinumerik_ac_ic"
          }
          #Rotate direction
          {
            "match": "(?<=\\=)ACN\\(|ACP\\(|DC\\("
            "name": "sinumerik_ac_ic"
          }
          {
            "match": "(AP|AR|RP|CR)(?=\\=)"
            "name": "sinumerik_circle_mod"
          }
          {
            "match": "(ANG|RND|RNDM|CHR|CHF)(?=\\=)"
            "name": "sinumerik_line_mod"
          }
          {
            "match": "(?<=[\\s]|^)[A]?(TRANS(MIT)?|MIRROR|SCALE|ROT|TRACYL|TRAFOOF)"
            "name": "sinumerik_frame"
          }
          {
            "match": "(?<=[\\s]|^)(SPCON\\(.\\)|SPCOF\\(.\\)|SETMS\\(.\\)|DIAMO[NF]|DIAM90)"
            "name": "sinumerik_frame"
          }

        ]
       sinumerik_mark:
        patterns: [
          {
            "match": "(?<=^|[\\s])[a-zA-Z_][a-zA-Z_][a-zA-Z_0-9]*(?=\\:)"
            "name": "sinumerik_mark"
          }
          {
            "match": "(?<=GOTO\\s|GOTO[BF]\\s)(\\w+)"
            "name": "sinumerik_mark_target"
          }
          {
            "match": "(?<=REPEAT\\s)\\w+"
            "name": "sinumerik_mark_target"
          }


        ]
      sinumerik_M:
        patterns: [
          "match": "(?<=[\\s]|^)M\\d+"
          "name": "sinumerik_M"
        ]
      sinumerik_S:
        patterns: [
          "match": "(?<=[\\s]|^)S\\d+"
          "name": "sinumerik_S"
        ]
      sinumerik_T:
        patterns: [
            {
              "match": "(?<=[\\s]|^)[TD]\\d+"
              "name": "sinumerik_T"
            }
        ]
}
